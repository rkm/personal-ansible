---
- name: setup
  hosts: all
  tags: [always]
  tasks:
    - name: create controller_tempdir
      delegate_to: localhost
      ansible.builtin.tempfile:
        state: directory
      register: controller_tempdir
      changed_when: false
    - name: create remote_tempdir
      ansible.builtin.tempfile:
        state: directory
      register: remote_tempdir
      changed_when: false

- name: Run system roles
  hosts: all
  pre_tasks:
    - name: end_play if not g_system_install
      ansible.builtin.meta: end_play
      when: not g_system_install | bool
  roles:
    - role: packages
      tags: [packages]
    - role: java
      tags: [java]

- name: install dotfiles
  hosts: all
  tags: [dotfiles]
  roles:
    - dotfiles

- name: install scripts
  hosts: all
  tags: [scripts]
  roles:
    - scripts

- name: install dotnet
  hosts: all
  tags: [dotnet]
  roles:
    - dotnet

- name: install rust
  hosts: all
  tags: [rust]
  roles:
    - rust

- name: setup python_venv
  hosts: all
  tags: [python_venv]
  roles:
    - python_venv

- name: setup tmux
  hosts: all
  tags: [tmux]
  roles:
    - tmux

- name: cleanup
  hosts: all
  tags: [always, cleanup]
  tasks:
    # NOTE(rkm 2022-01-02) Intentionally don't cleanup any remote tempdirs since
    # that only matters in CI
    - name: find temp dirs
      delegate_to: localhost
      ansible.builtin.find:
        paths: /tmp
        file_type: directory
        recurse: false
        patterns: "ansible.*"
      register: temp_paths
    - name: delete temp dirs
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ item.path }}"
        # TODO(rkm 2021-10-31) This can fail if other users have ansible temp dirs
        state: absent
      with_items: "{{ temp_paths.files }}"
      changed_when: false
